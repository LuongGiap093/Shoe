<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="btnthoat.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="btndangnhap.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtmk.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txttk.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="labelControl1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="labelControl2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="labelControl3.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImageStore" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Hj+LAFOkklGP/9k=
</value>
  </data>
</root>